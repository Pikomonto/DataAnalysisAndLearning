>>> runfile('/Users/akond/Documents/Spring-2016/CSC522/gitRepo/project/main_.py', wdir='/Users/akond/Documents/Spring-2016/CSC522/gitRepo/project')
Reloaded modules: sanityCheck, IO_, plotter, experiments, logiRegre, DataExtractionFromTables, utility
Started at:  2016-03-29 12:15:09
########################## Applying the 'M-E-D-I-A-N' approach with K-Means ###############################
Performing experiemnt # 3: Clustering score into 13 clusters 
Stats on file count : len=1407, median=19.0,  mean=54.1080312722, max=2237, min=1,
Stats on risk score (non-zero elemnts)-->len=549, median=51.1111111111,  mean=49.9387976503, max=53.3333333333, min=15.0,
And the centroids are ....  [[ 51.11111111]
 [ 15.        ]
 [ 30.        ]
 [ 44.61538462]
 [ 50.        ]
 [ 20.        ]
 [ 53.33333333]
 [ 52.22222222]
 [ 43.33333333]
 [ 50.66666667]
 [ 53.        ]
 [ 52.63157895]
 [ 52.        ]]
And the labels are .... 
549
Silhouette average--->  1.0
<------------ Performing Logistic Regression ------------->
Output of score (mean accuracy of test features and prediction classs) 
0.741347905282
Output of co-efficients =[[ -3.91259794e-04  -2.50652377e-04  -1.42243583e-03   5.02147703e-04
    6.62156908e-04   7.02000538e-03  -3.88406826e-01   7.25814120e-05
   -2.20030177e-02  -6.66177700e-02   6.44185044e-03  -1.11269739e-02
    2.44443171e-02   2.97051008e-04  -2.41173053e-03   2.96550057e-02
    1.01776798e-04   1.95962101e-02   6.74641096e-03  -9.93547976e-04
   -3.92808943e-04]]
Output of intercept =[ 2.03322728], n_iter_ = [59] 
==================================================================================================================
Done ;-)
Ended at:  2016-03-29 12:15:10
>>> 
>>> runfile('/Users/akond/Documents/Spring-2016/CSC522/gitRepo/project/main_.py', wdir='/Users/akond/Documents/Spring-2016/CSC522/gitRepo/project')
Reloaded modules: sanityCheck, IO_, plotter, experiments, logiRegre, DataExtractionFromTables, utility
Started at:  2016-03-29 12:16:57
########################## Applying the 'M-E-D-I-A-N' approach with K-Means ###############################
Performing experiemnt # 3: Clustering score into 10 clusters 
Stats on file count : len=1407, median=19.0,  mean=54.1080312722, max=2237, min=1,
Stats on risk score (non-zero elemnts)-->len=549, median=51.1111111111,  mean=49.9387976503, max=53.3333333333, min=15.0,
And the centroids are ....  [[ 51.11111111]
 [ 20.        ]
 [ 30.        ]
 [ 44.61538462]
 [ 15.        ]
 [ 50.        ]
 [ 52.29678363]
 [ 43.33333333]
 [ 53.22222222]
 [ 50.66666667]]
And the labels are .... 
549
Silhouette average--->  0.992330050871
<------------ Performing Logistic Regression ------------->
Output of score (mean accuracy of test features and prediction classs) 
0.741347905282
Output of co-efficients =[[ -4.03697041e-04  -2.50007587e-04  -1.42208899e-03   5.00830296e-04
    6.62450536e-04   7.07000753e-03  -3.88665537e-01   7.37504049e-05
   -2.20216596e-02  -6.64717981e-02   6.46300634e-03  -1.12393725e-02
    2.43769454e-02   1.87540647e-04  -2.39715672e-03   2.95400066e-02
    1.01504765e-04   1.97201774e-02   6.86780266e-03  -8.84957881e-04
   -2.83541865e-04]]
Output of intercept =[ 2.03483784], n_iter_ = [49] 
==================================================================================================================
Done ;-)
Ended at:  2016-03-29 12:16:57
>>> 
>>> runfile('/Users/akond/Documents/Spring-2016/CSC522/gitRepo/project/main_.py', wdir='/Users/akond/Documents/Spring-2016/CSC522/gitRepo/project')
Reloaded modules: sanityCheck, IO_, plotter, experiments, logiRegre, DataExtractionFromTables, utility
Started at:  2016-03-29 12:20:03
########################## Applying the 'M-E-D-I-A-N' approach with K-Means ###############################
Performing experiemnt # 3: Clustering score into 7 clusters 
Stats on file count : len=1407, median=19.0,  mean=54.1080312722, max=2237, min=1,
Stats on risk score (non-zero elemnts)-->len=549, median=51.1111111111,  mean=49.9387976503, max=53.3333333333, min=15.0,
And the centroids are ....  [[ 51.10333333]
 [ 20.        ]
 [ 30.        ]
 [ 44.18803419]
 [ 15.        ]
 [ 50.        ]
 [ 52.78672171]]
And the labels are .... 
549
Silhouette average--->  0.972623410052
<------------ Performing Logistic Regression ------------->
Output of score (mean accuracy of test features and prediction classs) 
0.746812386157
Output of co-efficients =[[  1.42077157e-02  -2.74131342e-04  -3.64901794e-03   5.96306235e-04
    1.22145398e-03   9.61765673e-03  -6.20860350e-01   2.14318704e-06
   -9.51184073e-03  -7.09557850e-02  -6.28182368e-03   5.93401814e-04
    2.88494475e-02   2.39010051e-03  -2.47528193e-03   2.76622187e-02
    9.93558898e-05   2.20649647e-02  -1.51369387e-03  -2.99183716e-03
   -2.48090783e-03]]
Output of intercept =[ 2.39722237], n_iter_ = [77] 
==================================================================================================================
Done ;-)
Ended at:  2016-03-29 12:20:03
>>> 
>>> runfile('/Users/akond/Documents/Spring-2016/CSC522/gitRepo/project/main_.py', wdir='/Users/akond/Documents/Spring-2016/CSC522/gitRepo/project')
Reloaded modules: sanityCheck, IO_, plotter, experiments, logiRegre, DataExtractionFromTables, utility
Started at:  2016-03-29 12:21:59
########################## Applying the 'M-E-D-I-A-N' approach with K-Means ###############################
Performing experiemnt # 3: Clustering score into 5 clusters 
Stats on file count : len=1407, median=19.0,  mean=54.1080312722, max=2237, min=1,
Stats on risk score (non-zero elemnts)-->len=549, median=51.1111111111,  mean=49.9387976503, max=53.3333333333, min=15.0,
And the centroids are ....  [[ 50.        ]
 [ 17.        ]
 [ 30.        ]
 [ 51.17196068]
 [ 44.18803419]]
And the labels are .... 
549
Silhouette average--->  0.917724955042
<------------ Performing Logistic Regression ------------->
Output of score (mean accuracy of test features and prediction classs) 
0.806921675774
Output of co-efficients =[[ -2.48311781e-03   7.50671033e-05   2.11473542e-03  -1.33903728e-04
   -8.52023017e-04   3.35129640e-02   7.07933158e-01  -2.47381904e-04
    2.99329363e-02   4.48165351e-02  -8.11564815e-03   2.73852321e-02
   -5.99650652e-02  -3.38529823e-04  -1.99814508e-03   4.69631212e-03
    3.53684240e-05  -1.91902421e-02   2.06238790e-03   7.07769924e-04
    2.14513896e-04]]
Output of intercept =[-3.26237675], n_iter_ = [39] 
==================================================================================================================
Done ;-)
Ended at:  2016-03-29 12:21:59
>>> 
>>> runfile('/Users/akond/Documents/Spring-2016/CSC522/gitRepo/project/main_.py', wdir='/Users/akond/Documents/Spring-2016/CSC522/gitRepo/project')
Reloaded modules: sanityCheck, IO_, plotter, experiments, logiRegre, DataExtractionFromTables, utility
Started at:  2016-03-29 12:23:00
########################## Applying the 'M-E-D-I-A-N' approach with K-Means ###############################
Performing experiemnt # 3: Clustering score into two clusters 
Stats on file count : len=1407, median=19.0,  mean=54.1080312722, max=2237, min=1,
Stats on risk score (non-zero elemnts)-->len=549, median=51.1111111111,  mean=49.9387976503, max=53.3333333333, min=15.0,
And the centroids are ....  [[ 50.82030058]
 [ 17.        ]
 [ 30.        ]]
And the labels are .... 
549
Silhouette average--->  0.961782298116
<------------ Performing Logistic Regression ------------->
Output of score (mean accuracy of test features and prediction classs) 
0.974499089253
Output of co-efficients =[[ -1.00289720e-02  -2.05223322e-03   2.67748432e-03   1.73722582e-03
    2.26826055e-03   7.44243064e-02   2.30289966e+00  -2.78425937e-03
    1.00492755e-01  -1.62176182e-01   2.91061386e-03   3.21175578e-01
   -7.25918516e-02  -5.66884674e-03  -8.20955121e-03   2.71961429e-01
    1.19853456e-03  -1.13319505e-01   3.80553170e-02   4.87842601e-03
    5.92266226e-03]]
Output of intercept =[-5.04277141], n_iter_ = [100] 
==================================================================================================================
Done ;-)
Ended at:  2016-03-29 12:23:01
>>> 